// Code generated by protoc-gen-go.
// source: graph.proto
// DO NOT EDIT!

/*
Package main is a generated protocol buffer package.

It is generated from these files:
	graph.proto

It has these top-level messages:
	SerialGraph
	Node
*/
package graph

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type NodeType int32

const (
	NodeType_UNKNOWN NodeType = 0
	NodeType_POST    NodeType = 1
	NodeType_IMG     NodeType = 2
	NodeType_TAG     NodeType = 3
	NodeType_USER    NodeType = 4
)

var NodeType_name = map[int32]string{
	0: "UNKNOWN",
	1: "POST",
	2: "IMG",
	3: "TAG",
	4: "USER",
}
var NodeType_value = map[string]int32{
	"UNKNOWN": 0,
	"POST":    1,
	"IMG":     2,
	"TAG":     3,
	"USER":    4,
}

func (x NodeType) Enum() *NodeType {
	p := new(NodeType)
	*p = x
	return p
}
func (x NodeType) String() string {
	return proto.EnumName(NodeType_name, int32(x))
}
func (x *NodeType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(NodeType_value, data, "NodeType")
	if err != nil {
		return err
	}
	*x = NodeType(value)
	return nil
}

type SerialGraph struct {
	Nodes            []*Node `protobuf:"bytes,1,rep,name=nodes" json:"nodes,omitempty"`
	Directed         *bool   `protobuf:"varint,2,opt,name=directed,def=0" json:"directed,omitempty"`
	NodeCount        *uint64 `protobuf:"varint,3,req,name=nodeCount,def=0" json:"nodeCount,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SerialGraph) Reset()         { *m = SerialGraph{} }
func (m *SerialGraph) String() string { return proto.CompactTextString(m) }
func (*SerialGraph) ProtoMessage()    {}

const Default_SerialGraph_Directed bool = false
const Default_SerialGraph_NodeCount uint64 = 0

func (m *SerialGraph) GetNodes() []*Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *SerialGraph) GetDirected() bool {
	if m != nil && m.Directed != nil {
		return *m.Directed
	}
	return Default_SerialGraph_Directed
}

func (m *SerialGraph) GetNodeCount() uint64 {
	if m != nil && m.NodeCount != nil {
		return *m.NodeCount
	}
	return Default_SerialGraph_NodeCount
}

type Node struct {
	Id               *uint64   `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Value            *string   `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
	Weight           *int64    `protobuf:"varint,3,opt,name=weight" json:"weight,omitempty"`
	Type             *NodeType `protobuf:"varint,4,opt,name=type,enum=main.NodeType,def=0" json:"type,omitempty"`
	Adjacent         []uint64  `protobuf:"varint,5,rep,name=adjacent" json:"adjacent,omitempty"`
	Weights          []int64   `protobuf:"varint,6,rep,name=weights" json:"weights,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}

const Default_Node_Type NodeType = NodeType_UNKNOWN

func (m *Node) GetId() uint64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Node) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

func (m *Node) GetWeight() int64 {
	if m != nil && m.Weight != nil {
		return *m.Weight
	}
	return 0
}

func (m *Node) GetType() NodeType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_Node_Type
}

func (m *Node) GetAdjacent() []uint64 {
	if m != nil {
		return m.Adjacent
	}
	return nil
}

func (m *Node) GetWeights() []int64 {
	if m != nil {
		return m.Weights
	}
	return nil
}

func init() {
	proto.RegisterEnum("main.NodeType", NodeType_name, NodeType_value)
}
